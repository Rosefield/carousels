{
  "nodeType": "FunctionDefinition",
  "name": [
    {
      "nodeType": "NameExpression",
      "name": "merge_sort_dedup",
      "parameters": []
    }
  ],
  "parameters": [
    {
      "nodeType": "VariableDefinition",
      "name": [
        {
          "nodeType": "NameExpression",
          "name": "a",
          "parameters": []
        }
      ],
      "parameters": [],
      "type": [
        {
          "nodeType": "TypeNode",
          "parameters": [],
          "type": "array",
          "dependentType_": "&[Possession<T,P>]",
          "secret": "true"
        }
      ]
    }
  ],
  "returnType": [
    {
      "nodeType": "TypeNode",
      "parameters": [],
      "type": "array",
      "dependentType_": "Vec<Possession<T,P>>",
      "secret": "true"
    }
  ],
  "body": [
    {
      "nodeType": "VariableDefinition",
      "name": [
        {
          "nodeType": "NameExpression",
          "name": "n",
          "parameters": []
        }
      ],
      "parameters": [],
      "type": [
        {
          "nodeType": "TypeNode",
          "parameters": [],
          "type": "any"
        }
      ],
      "assignment": [
        {
          "nodeType": "VariableAssignment",
          "name": [
            {
              "nodeType": "NameExpression",
              "name": "n",
              "parameters": []
            }
          ],
          "parameters": [],
          "expression": [
            {
              "nodeType": "FunctionCall",
              "function": [
                {
                  "nodeType": "DotExpression",
                  "parameters": [],
                  "left": [
                    {
                      "nodeType": "NameExpression",
                      "name": "a",
                      "parameters": []
                    }
                  ],
                  "right": [
                    {
                      "nodeType": "NameExpression",
                      "name": "len",
                      "parameters": []
                    }
                  ]
                }
              ],
              "parameters": []
            }
          ]
        }
      ]
    },
    {
      "nodeType": "If",
      "parameters": [],
      "condition": [
        {
          "nodeType": "DirectExpression",
          "parameters": [],
          "arity": "2",
          "operator": ">=",
          "operands": [
            {
              "nodeType": "NameExpression",
              "name": "n",
              "parameters": []
            },
            {
              "nodeType": "LiteralExpression",
              "parameters": [],
              "value": "1",
              "type": "number"
            }
          ]
        }
      ],
      "ifBody": [
        {
          "nodeType": "VariableDefinition",
          "name": [
            {
              "nodeType": "NameExpression",
              "name": "m",
              "parameters": []
            }
          ],
          "parameters": [],
          "type": [
            {
              "nodeType": "TypeNode",
              "parameters": [],
              "type": "any"
            }
          ],
          "assignment": [
            {
              "nodeType": "VariableAssignment",
              "name": [
                {
                  "nodeType": "NameExpression",
                  "name": "m",
                  "parameters": []
                }
              ],
              "parameters": [],
              "expression": [
                {
                  "nodeType": "DirectExpression",
                  "parameters": [],
                  "arity": "2",
                  "operator": "/",
                  "operands": [
                    {
                      "nodeType": "NameExpression",
                      "name": "n",
                      "parameters": []
                    },
                    {
                      "nodeType": "LiteralExpression",
                      "parameters": [],
                      "value": "2",
                      "type": "number"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "nodeType": "FunctionCall",
          "function": [
            {
              "nodeType": "NameExpression",
              "name": "merge_dedup",
              "parameters": []
            }
          ],
          "parameters": [
            {
              "nodeType": "FunctionCall",
              "function": [
                {
                  "nodeType": "NameExpression",
                  "name": "merge_sort_dedup",
                  "parameters": []
                }
              ],
              "parameters": [
                {
                  "nodeType": "SliceExpression",
                  "parameters": [],
                  "array": [
                    {
                      "nodeType": "NameExpression",
                      "name": "a",
                      "parameters": []
                    }
                  ],
                  "range": [
                    {
                      "nodeType": "RangeExpression",
                      "parameters": [],
                      "start": [
                        {
                          "nodeType": "LiteralExpression",
                          "parameters": [],
                          "value": "0",
                          "type": "number"
                        }
                      ],
                      "end": [
                        {
                          "nodeType": "NameExpression",
                          "name": "m",
                          "parameters": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "nodeType": "FunctionCall",
              "function": [
                {
                  "nodeType": "NameExpression",
                  "name": "merge_sort_dedup",
                  "parameters": []
                }
              ],
              "parameters": [
                {
                  "nodeType": "SliceExpression",
                  "parameters": [],
                  "array": [
                    {
                      "nodeType": "NameExpression",
                      "name": "a",
                      "parameters": []
                    }
                  ],
                  "range": [
                    {
                      "nodeType": "RangeExpression",
                      "parameters": [],
                      "start": [
                        {
                          "nodeType": "NameExpression",
                          "name": "m",
                          "parameters": []
                        }
                      ],
                      "end": [
                        {
                          "nodeType": "NameExpression",
                          "name": "n",
                          "parameters": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "elseBody": [
        {
          "nodeType": "FunctionCall",
          "function": [
            {
              "nodeType": "DotExpression",
              "parameters": [],
              "left": [
                {
                  "nodeType": "NameExpression",
                  "name": "a",
                  "parameters": []
                }
              ],
              "right": [
                {
                  "nodeType": "NameExpression",
                  "name": "to_owned",
                  "parameters": []
                }
              ]
            }
          ],
          "parameters": []
        }
      ]
    }
  ]
}
