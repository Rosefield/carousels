[
  {
    "nodeType": "FunctionDefinition",
    "name": {
      "name": "merge"
    },
    "parameters": [
      {
        "nodeType": "VariableDefinition",
        "name": {
          "name": "left"
        },
        "type": {
          "secret": true,
          "type": "array",
          "dependentType": {
            "secret": true,
            "type": "&[Possession<T,P>]",
            "dependentType": null
          }
        },
        "assignment": null
      },
      {
        "nodeType": "VariableDefinition",
        "name": {
          "name": "right"
        },
        "type": {
          "secret": true,
          "type": "array",
          "dependentType": {
            "secret": true,
            "type": "&[Possession<T,P>]",
            "dependentType": null
          }
        },
        "assignment": null
      }
    ],
    "body": [
      {
        "nodeType": "VariableDefinition",
        "name": {
          "name": "out_len"
        },
        "type": {
          "secret": false,
          "type": "",
          "dependentType": null
        },
        "assignment": {
          "name": {
            "nodeType": "NameExpression",
            "name": "out_len"
          },
          "expression": {
            "nodeType": "DirectExpression",
            "operator": "+",
            "arity": 2,
            "operands": [
              {
                "nodeType": "DotExpression",
                "left": {
                  "nodeType": "NameExpression",
                  "name": "left"
                },
                "right": {
                  "nodeType": "NameExpression",
                  "name": "len"
                }
              },
              {
                "nodeType": "DotExpression",
                "left": {
                  "nodeType": "NameExpression",
                  "name": "right"
                },
                "right": {
                  "nodeType": "NameExpression",
                  "name": "len"
                }
              }
            ]
          }
        }
      },
      {
        "nodeType": "VariableDefinition",
        "name": {
          "name": "out"
        },
        "type": {
          "secret": false,
          "type": "",
          "dependentType": null
        },
        "assignment": {
          "name": {
            "nodeType": "NameExpression",
            "name": "out"
          },
          "expression": {
            "nodeType": "FunctionCall",
            "function": {
              "nodeType": "NameExpression",
              "name": "Vec::with_capacity"
            },
            "parameters": [
              {
                "nodeType": "NameExpression",
                "name": "out_len"
              }
            ]
          }
        }
      },
      {
        "nodeType": "VariableDefinition",
        "name": {
          "name": "li"
        },
        "type": {
          "secret": false,
          "type": "",
          "dependentType": null
        },
        "assignment": {
          "name": {
            "nodeType": "NameExpression",
            "name": "li"
          },
          "expression": {
            "nodeType": "DirectExpression",
            "operator": "+",
            "arity": 2,
            "operands": [
              {
                "nodeType": "NameExpression",
                "name": "li"
              },
              {
                "nodeType": "LiteralExpression",
                "value": "0",
                "type": "number"
              }
            ]
          }
        }
      },
      {
        "nodeType": "VariableDefinition",
        "name": {
          "name": "ri"
        },
        "type": {
          "secret": false,
          "type": "",
          "dependentType": null
        },
        "assignment": {
          "name": {
            "nodeType": "NameExpression",
            "name": "ri"
          },
          "expression": {
            "nodeType": "DirectExpression",
            "operator": "+",
            "arity": 2,
            "operands": [
              {
                "nodeType": "NameExpression",
                "name": "ri"
              },
              {
                "nodeType": "LiteralExpression",
                "value": "0",
                "type": "number"
              }
            ]
          }
        }
      },
      {
        "nodeType": "VariableDefinition",
        "name": {
          "name": "left_len"
        },
        "type": {
          "secret": false,
          "type": "",
          "dependentType": null
        },
        "assignment": {
          "name": {
            "nodeType": "NameExpression",
            "name": "left_len"
          },
          "expression": {
            "nodeType": "DirectExpression",
            "operator": "+",
            "arity": 2,
            "operands": [
              {
                "nodeType": "NameExpression",
                "name": "left_len"
              },
              {
                "nodeType": "DotExpression",
                "left": {
                  "nodeType": "NameExpression",
                  "name": "left"
                },
                "right": {
                  "nodeType": "NameExpression",
                  "name": "len"
                }
              }
            ]
          }
        }
      },
      {
        "nodeType": "VariableDefinition",
        "name": {
          "name": "right_len"
        },
        "type": {
          "secret": false,
          "type": "",
          "dependentType": null
        },
        "assignment": {
          "name": {
            "nodeType": "NameExpression",
            "name": "right_len"
          },
          "expression": {
            "nodeType": "DirectExpression",
            "operator": "+",
            "arity": 2,
            "operands": [
              {
                "nodeType": "NameExpression",
                "name": "right_len"
              },
              {
                "nodeType": "DotExpression",
                "left": {
                  "nodeType": "NameExpression",
                  "name": "left"
                },
                "right": {
                  "nodeType": "NameExpression",
                  "name": "len"
                }
              }
            ]
          }
        }
      },
      {
        "nodeType": "ForEach",
        "iterator": {
          "nodeType": "Error",
          "err": "Error poping from visit_expr_stack"
        },
        "range": {
          "nodeType": "RangeExpression",
          "start": {
            "nodeType": "LiteralExpression",
            "value": "0",
            "type": "number"
          },
          "end": {
            "nodeType": "NameExpression",
            "name": "out_len"
          },
          "increment": null
        },
        "body": [
          {
            "nodeType": "FunctionCall",
            "function": {
              "nodeType": "DotExpression",
              "left": {
                "nodeType": "NameExpression",
                "name": "out"
              },
              "right": {
                "nodeType": "NameExpression",
                "name": "push"
              }
            },
            "parameters": [
              {
                "nodeType": "If",
                "condition": {
                  "nodeType": "DirectExpression",
                  "operator": "||",
                  "arity": 2,
                  "operands": [
                    {
                      "nodeType": "DirectExpression",
                      "operator": "==",
                      "arity": 2,
                      "operands": [
                        {
                          "nodeType": "NameExpression",
                          "name": "li"
                        },
                        {
                          "nodeType": "NameExpression",
                          "name": "left_len"
                        }
                      ]
                    },
                    {
                      "nodeType": "DirectExpression",
                      "operator": "&&",
                      "arity": 2,
                      "operands": [
                        {
                          "nodeType": "DirectExpression",
                          "operator": "<",
                          "arity": 2,
                          "operands": [
                            {
                              "nodeType": "NameExpression",
                              "name": "ri"
                            },
                            {
                              "nodeType": "NameExpression",
                              "name": "right_len"
                            }
                          ]
                        },
                        {
                          "nodeType": "DirectExpression",
                          "operator": ">=",
                          "arity": 2,
                          "operands": [
                            {
                              "nodeType": "ArrayAccess",
                              "array": {
                                "nodeType": "FunctionCall",
                                "function": {
                                  "nodeType": "NameExpression",
                                  "name": "Oram"
                                },
                                "parameters": [
                                  {
                                    "nodeType": "NameExpression",
                                    "name": "right"
                                  }
                                ]
                              },
                              "index": {
                                "nodeType": "NameExpression",
                                "name": "ri"
                              }
                            },
                            {
                              "nodeType": "ArrayAccess",
                              "array": {
                                "nodeType": "FunctionCall",
                                "function": {
                                  "nodeType": "NameExpression",
                                  "name": "Oram"
                                },
                                "parameters": [
                                  {
                                    "nodeType": "NameExpression",
                                    "name": "left"
                                  }
                                ]
                              },
                              "index": {
                                "nodeType": "NameExpression",
                                "name": "li"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "ifBody": [
                  {
                    "nodeType": "VariableDefinition",
                    "name": {
                      "name": "o"
                    },
                    "type": {
                      "secret": false,
                      "type": "",
                      "dependentType": null
                    },
                    "assignment": {
                      "name": {
                        "nodeType": "NameExpression",
                        "name": "o"
                      },
                      "expression": {
                        "nodeType": "DotExpression",
                        "left": {
                          "nodeType": "ArrayAccess",
                          "array": {
                            "nodeType": "FunctionCall",
                            "function": {
                              "nodeType": "NameExpression",
                              "name": "Oram"
                            },
                            "parameters": [
                              {
                                "nodeType": "NameExpression",
                                "name": "right"
                              }
                            ]
                          },
                          "index": {
                            "nodeType": "NameExpression",
                            "name": "ri"
                          }
                        },
                        "right": {
                          "nodeType": "NameExpression",
                          "name": "clone"
                        }
                      }
                    }
                  },
                  {
                    "nodeType": "VariableAssignment",
                    "name": {
                      "nodeType": "NameExpression",
                      "name": "ri"
                    },
                    "expression": {
                      "nodeType": "DirectExpression",
                      "operator": "+",
                      "arity": 2,
                      "operands": [
                        {
                          "nodeType": "NameExpression",
                          "name": "ri"
                        },
                        {
                          "nodeType": "LiteralExpression",
                          "value": "1",
                          "type": "number"
                        }
                      ]
                    }
                  },
                  {
                    "nodeType": "NameExpression",
                    "name": "o"
                  }
                ],
                "elseBody": [
                  {
                    "nodeType": "VariableDefinition",
                    "name": {
                      "name": "o"
                    },
                    "type": {
                      "secret": false,
                      "type": "",
                      "dependentType": null
                    },
                    "assignment": {
                      "name": {
                        "nodeType": "NameExpression",
                        "name": "o"
                      },
                      "expression": {
                        "nodeType": "DotExpression",
                        "left": {
                          "nodeType": "ArrayAccess",
                          "array": {
                            "nodeType": "FunctionCall",
                            "function": {
                              "nodeType": "NameExpression",
                              "name": "Oram"
                            },
                            "parameters": [
                              {
                                "nodeType": "NameExpression",
                                "name": "left"
                              }
                            ]
                          },
                          "index": {
                            "nodeType": "NameExpression",
                            "name": "li"
                          }
                        },
                        "right": {
                          "nodeType": "NameExpression",
                          "name": "clone"
                        }
                      }
                    }
                  },
                  {
                    "nodeType": "VariableAssignment",
                    "name": {
                      "nodeType": "NameExpression",
                      "name": "li"
                    },
                    "expression": {
                      "nodeType": "DirectExpression",
                      "operator": "+",
                      "arity": 2,
                      "operands": [
                        {
                          "nodeType": "NameExpression",
                          "name": "li"
                        },
                        {
                          "nodeType": "LiteralExpression",
                          "value": "1",
                          "type": "number"
                        }
                      ]
                    }
                  },
                  {
                    "nodeType": "NameExpression",
                    "name": "o"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "nodeType": "NameExpression",
        "name": "out"
      }
    ],
    "returnType": {
      "secret": true,
      "type": "array",
      "dependentType": {
        "secret": true,
        "type": "Vec<Possession<T,P>>",
        "dependentType": null
      }
    }
  }
]
